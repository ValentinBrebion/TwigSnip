name: Create Release

on:
  push:
    branches:
      - develop
      - master 

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract Version from Tag or Branch
        id: extract_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/V-}  # Extraire la version à partir d'un tag
          else
            VERSION=${GITHUB_REF#refs/heads/}  # Extraire la version à partir d'une branche
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version extracted: $VERSION"

      - name: Extract Changelog
        id: changelog
        run: |
          VERSION=${{ env.VERSION }}
          # Extraire les notes de la version depuis CHANGELOG.md
          awk "/## \[${VERSION}\]/,/## \[/ {if (!/## \[${VERSION}\]/) print}" CHANGELOG.md | sed '$d' > release_notes.txt || true
          echo "changelog=$(cat release_notes.txt)" >> $GITHUB_OUTPUT

      - name: Create Tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git tag "V-${{ env.VERSION }}"
          git push origin "V-${{ env.VERSION }}"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "V-${{ env.VERSION }}"
          release_name: "Release V-${{ env.VERSION }}"
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
